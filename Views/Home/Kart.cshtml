@{
    ViewData["Title"] = "Kart";
}

@{
    Layout = "_Layout";
}

@Html.Partial("_Navbar")

<!--<div>
    <a asp-action="Logout">Logg ut</a>
    <a asp-action="ViewUsers">Users</a>
    <a asp-action="Profile">Profil</a>
</div> -->


<!--<nav class="navbar">
    <div class="nav-logo">
        <a href="/">
            <img width="100" src="~/css/kartverket-logo-1.jpg" alt="Logo">
        </a>
    </div>
    <div class="flex justify-between">
        <div class="nav-links">
            @if (ViewBag.isInternalUser == true)
            {
                <a asp-action="Innmeldinger" class="innmeldinger-link @(ViewContext.RouteData.Values["action"].ToString() == "Innmeldinger" ? "active-link" : "")">Innmeldinger</a>
            }
            <a asp-action="Index" class="kart-link @(ViewContext.RouteData.Values["action"].ToString() == "Index" ? "active-link" : "")">Kart</a>
            <a asp-action="Inbox" class="inbox-link @(ViewContext.RouteData.Values["action"].ToString() == "Inbox" ? "active-link" : "")">Inbox</a>
            <a asp-action="Logout" class="logout-link @(ViewContext.RouteData.Values["action"].ToString() == "Logout" ? "active-link" : "")">Logg ut</a>
        </div>
        <div class="profile mx-4 nav-links">
            <a asp-action="Profile" class="profile-link @(ViewContext.RouteData.Values["action"].ToString() == "Profile" ? "active-link" : "")">Profil</a>
        </div>
    </div>
</nav> -->


<!-- Map container with defined height -->
<div id="map" style="height: 90vh" class=" w-screen ">

    <div class="" style="position: absolute; bottom: 50px; right: 50%; z-index: 500;">

        <button id="modalButton" class="bg-blue-600 rounded-md px-8 py-3 text-white text-lg invisible">Send</button>
    
    </div>

    <div id="modal" class="invisible bg-black bg-opacity-50 w-screen h-screen flex justify-center items-center" style="position: absolute; z-index: 1100;"> <!-- modal -->

        <div class=" w-96 bg-white rounded-md opcaity-100"> <!-- modal content -->
            <div class="border-b-2 border-gray-200 flex justify-between px-4"> <!-- header -->
                <div class="flex items-center">
                    <h4 class="text-lg font-medium">Beskrivelse</h4>
                </div>
                <div id="modalCloseButton" class="p-2 my-2 hover:bg-gray-200 rounded-full">
                    <img src="/x.svg" />
                </div>
            </div>

            <div class="p-2 mt-4 text-lg"> <!-- modal body -->
                <form asp-action="RegisterAreaChange" method="post" class="flex flex-col justify-content-between h-full w-full">
                    <div>
                        <input type="hidden" id="geoJsonInput" name="geoJson" />
                        <input type="hidden" id="fylke" name="fylke" />
                        <label for="tyype" class=" text-lg">Type</label>
                        <!-- <input name="tyype" class="w-full border-2 p-2 rounded-md my-2 " type="text" placeholder="type"  /> -->
                        <select name="type" class="w-full border-2 p-2 rounded-md my-2">
                            <option value="land">Land</option>
                            <option value="hav">Hav</option>
                        </select>
                        <label class="text-lg">Kommentar</label>
                        <textarea name="Description" class="border-2 my-2 p-2 w-full rounded-md"> </textarea>
                    </div>
                    <button class="w-[368px] rounded-md bg-blue-500 p-2 text-center text-white" type="submit">Send</button>
                </form>
            </div>
        </div>

    </div>

    <div class="space-y-2 cursor-pointer md-right-[25px]" style="position: absolute; bottom: 50px; right: 50px; z-index: 500;">
        <div id="position" class="p-2 bg-blue-600 rounded-md text-center">
            <img class="ml-[3px]" src="/zoom.svg" />
        </div>

        <div class="bg-blue-600 rounded-md">
            <div id="plus" class="p-2 text-center">
                <img src="/plus.svg" />
            </div>
            <hr class="text-white" />
            <div id="minus" class="p-2  text-center">
                <img src="/minus.svg" />
            </div>
        </div>
    </div>
</div>




<br />

 <!-- <form asp-action="RegisterAreaChange" method="post">

     <input type="hidden" id="geoJsonInput" name="geoJson" />
     <div>
         <label for="description">Kommentar:</label>
         <textarea id="description" name="Description" class="form-control"></textarea>
     </div>
     <br />
     <button type="submit" class="btn btn-primary">Submit</button>
 </form> -->

@section Scripts {
    <!-- These frour lines are important to keep -->
    <!-- 1. Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />

    <!-- 2. Leaflet Draw CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css" />

    <!-- 3. Leaflet JS -->
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

    <!-- 4. Leaflet Draw JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js"></script>

    <script src="https://cdn.tailwindcss.com"></script>



    <script>

        document.getElementById("position").addEventListener("click", userPosition)
        document.getElementById("plus").addEventListener("click", zoomIn)
        document.getElementById("minus").addEventListener("click", zoomOut)
        document.getElementById("modalButton").addEventListener("click", openModal)
        document.getElementById("modalCloseButton").addEventListener("click", closeModal)
        // document.getElementById().addEventListener("input", allowSendcloseModal

        // function allowSend() {

        // }



        function openModal() {

            // console.log("open modal was clicked!")'
            if (geoJsonInput.value) {
                document.getElementById("modal").classList.remove("invisible");
            }
            getFylke() 
        }


        function closeModal() {
            document.getElementById("modal").classList.add("invisible");
            getFylke()
        }

        var map = L.map('map', { zoomControl: false, doubleClickZoom: false }).setView([65.50, 20.38], 5);  // Center the map on a location
        // map.zoomControl = false;

        // Add a base map layer
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(map);

        // Initialize the feature group that will hold the drawn shapes
        var drawnItems = new L.FeatureGroup();
        map.addLayer(drawnItems);


        function userPosition(e) {

            map.locate({
                setView: true,
            })
        }

        function zoomIn(e) {

            map.zoomIn()
        }

        function zoomOut(e) {

            map.zoomOut()
        }


        function getFylke() {


            jso = document.getElementById('geoJsonInput').value 
            console.log("jso is: ", jso)
            jso = JSON.parse(jso)
            console.log(jso)
            if (jso.geometry.type == "LineString") {
                ost = jso.geometry.coordinates[0][0]
                nord = jso.geometry.coordinates[0][1]
                console.log("nord is: ", nord)
            }
            else {
                ost = jso.geometry.coordinates[0]
                nord = jso.geometry.coordinates[1]
                console.log("ost", ost)
                console.log("nord", nord)
            }
            
            
           fetch(`https://api.kartverket.no/kommuneinfo/v1/punkt?nord=${nord}&ost=${ost}&koordsys=4258`)
           .then ((r) => r.json())
           .then ((data) => {
               console.log(data)
               
               document.getElementById("fylke").value = data.fylkesnavn

               
           })


        }



        // Creates the drawing control on the left hand side
        // The drawing control enables drawing of markers, polygons, and polylines
        var drawControl = new L.Control.Draw({
            draw: {
                polygon: false,
                polyline: true,
                marker: true,
                circle: false,  //Disable circle drawing
                rectangle: false
            },
            edit: {
                featureGroup: drawnItems
            }
        });
        map.addControl(drawControl);

        // Event handling when a layer is drawn on the map
        map.on(L.Draw.Event.CREATED, function (e) {
            var type = e.layerType,
                layer = e.layer;

            drawnItems.addLayer(layer);

            // Get the GeoJSON representation of the drawn layer
            var geoJsonData = layer.toGeoJSON();
            var geoJsonString = JSON.stringify(geoJsonData);

            // Set the GeoJSON string into the hidden input field in the form
            document.getElementById('geoJsonInput').value = geoJsonString;
            document.getElementById("modalButton").classList.remove("invisible");
        });

        var gj = @Html.Raw(ViewBag.Geojson)
        console.log("Hello, geoJSON is:", gj);

        L.geoJSON(gj).addTo(map);

    </script>
}
